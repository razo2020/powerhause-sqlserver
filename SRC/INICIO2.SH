#!/bin/bash
# -*- ENCODING: UTF-8 -*-

_ZONA=$PWD
# find TEMP -name "QSHOGEN.QDS"|sed "s/QSHOGEN.QDS//" > DIR.T
rm -f LIBRO.TXT
for _DIR in $(find TEMP -name "QSHOGEN.QDS"|sed "s/QSHOGEN.QDS//")
do
	pushd $_DIR
		rm -fr *.L
		rm -fr *.R
		rm -fr *.T
		rm -fr *.G
		# rm -fr *SQL
		iconv -f CP850 -t UTF-8 QSHOGEN.QDS | dos2unix | sed '/^$/d; s/^[ v]*//' > TEMP.T
		
		# unix2dos TABLAS.QZS
		# iconv -f UTF-8 -t CP850 TABLAS.QZS > TABLA.QZS
		
		_BASE=`basename $PWD`
		_DESCB=$(awk '{if ($0~/Title/) {gsub(/Title |['\'''\"']/,"",$0) ; print $0; exit}}' TEMP.T)
		echo "USE [master]
GO
CREATE DATABASE ["$_BASE"] ON  PRIMARY
( NAME = N'"$_BASE"', FILENAME = N'c:\Program Files (x86)\Microsoft SQL Server\MSSQL10.SQLEXPRESS\MSSQL\DATA\\"$_BASE".mdf' , SIZE = 3072KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
LOG ON 
( NAME = N'"$_BASE"_log', FILENAME = N'c:\Program Files (x86)\Microsoft SQL Server\MSSQL10.SQLEXPRESS\MSSQL\DATA\\"$_BASE"_log.ldf' , SIZE = 1024KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)
GO
ALTER DATABASE ["$_BASE"] SET COMPATIBILITY_LEVEL = 100
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC ["$_BASE"].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE ["$_BASE"] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE ["$_BASE"] SET ANSI_NULLS OFF 
GO
ALTER DATABASE ["$_BASE"] SET ANSI_PADDING OFF 
GO
ALTER DATABASE ["$_BASE"] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE ["$_BASE"] SET ARITHABORT OFF 
GO
ALTER DATABASE ["$_BASE"] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE ["$_BASE"] SET AUTO_CREATE_STATISTICS ON 
GO
ALTER DATABASE ["$_BASE"] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE ["$_BASE"] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE ["$_BASE"] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE ["$_BASE"] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE ["$_BASE"] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE ["$_BASE"] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE ["$_BASE"] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE ["$_BASE"] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE ["$_BASE"] SET  DISABLE_BROKER 
GO
ALTER DATABASE ["$_BASE"] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE ["$_BASE"] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE ["$_BASE"] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE ["$_BASE"] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE ["$_BASE"] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE ["$_BASE"] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE ["$_BASE"] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE ["$_BASE"] SET  READ_WRITE 
GO
ALTER DATABASE ["$_BASE"] SET RECOVERY SIMPLE 
GO
ALTER DATABASE ["$_BASE"] SET  MULTI_USER 
GO
ALTER DATABASE ["$_BASE"] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE ["$_BASE"] SET DB_CHAINING OFF 
GO
EXEC ["$_BASE"].sys.sp_addextendedproperty @name=N'MS_Description', @value=N'"$_DESCB"' 
GO
USE ["$_BASE"]" > ESTRUC_$_BASE.SQL

		
		_LINEAF=$(grep -n -w -m1 "File" TEMP.T | cut -f 1 -d:)
		_LINEAE=$(grep -n -w -m1 "Element" TEMP.T | cut -f 1 -d:)
		_LINEAR=$(grep -n -w -m1 "Record" TEMP.T | cut -f 1 -d:)

		let _LINEAE-=1
		sed -n "${_LINEAF},${_LINEAE} p" TEMP.T| $_ZONA/ELEMENT.AWK | $_ZONA/ELEMENT1.AWK #> TEMPF.T
		
		let _LINEAE+=1
		let _LINEAR-=1
		sed -n "${_LINEAE},${_LINEAR} p" TEMP.T| $_ZONA/ELEMENT.AWK | $_ZONA/ELEMENT2.AWK #> TEMPE.T
		
		let _LINEAR+=1
		sed -n "${_LINEAR},$ p" TEMP.T|	awk -v BASE=$_BASE -v DESCB="$_DESCB" -f $_ZONA/ELEMENT3.AWK >> ESTRUC_$_BASE.SQL #> TEMPR.T
		
		cat INDICE.L >>$_ZONA/LIBRO.TXT
		$_ZONA/TABLA2.AWK
		
		# for _COD in (LISTS.T)
		# do
			# TEMPO=
			# awk -v _TABLA=$TEMPO -f $_ZONA/INSERT.AWK $TEMPO >temporal
		# done
		
		rm -fr *.T
		mv -f ESTRUC_$_BASE.SQL $_ZONA/SQL/ESTRUC_$_BASE.SQL
	popd 
done

# iconv -f UTF-8 -t CP850 LIBRO.TXT > LIBR.TXT
# unix2dos LIBR.TXT
# # rm -fr LIBRO.TXT
# # mv LIBR.TXT LIBRO.TXT

# rm -f LIBRO.TXT
# for _IND in $(find TEMP -name "Indice.L")
# do 
	# cat $_IND >>LIBRO.TXT 
	# rm -f $_IND
# done
